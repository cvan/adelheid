@import "_lib";

$adelheid_ms: 3s;
$bubble1: #DD1E2E;
$bubble2: #ECB036;
$bubble3: #06A1CD;
$bubble4: #228559;

body {
    @include disable_user_select();
}

.prologue {
    @include box-shadow(0 0 1px 2px $dark-gray);
    -moz-transition: -moz-transform 5s ease-in, opacity 5s linear 4s;
    -webkit-transition: -webkit-transform 5s ease-in, opacity 5s linear 4s;
    -moz-transform: translate3d(0, 0, 0);
    -webkit-transform: translate3d(0, 0, 0);
    background-image: url('/img/textures/prologue-bg.png');
    height: 100%;
    left: 0;
    overflow: hidden;
    position: fixed;
    right: 0;
    width: 100%;
    z-index: 1000;

    .prologue-content {
        -moz-transition: -moz-transform 5s ease-in, opacity 3s ease-in;
        -webkit-transition: -webkit-transform 5s ease-in, opacity 3s ease-in;
        border-radius: 3px;
        color: $white;
        font-size: 20px;
        height: 100%;
        margin: 0 auto;
        padding-top: 20%;
        text-align: center;
        width: 480px;
    }
    .adelheid-start {
        -moz-transition: -moz-transform .2s;
        -webkit-transition: -webkit-transform .2s;
        color: $white;
        display: block;
        font-size: 36px;
        padding: 5px;

        &.tapped,
        &:active {
            -moz-transform: scale(.9);
            -webkit-transform: scale(.9);
        }
    }
    &.raised {
        -moz-transform: translate3d(0, -110%, 0);
        -webkit-transform: translate3d(0, -110%, 0);
        opacity: 0;

        .prologue-content {
            -moz-transform: translate3d(0, 4%, 0);
            -webkit-transform: translate3d(0, 4%, 0);
            opacity: 0;
        }
    }
    &.raise-finished {
        z-index: 0;
    }
}

.watermark {
    bottom: -20px;
    height: 50%;
    left: 20px;
    position: absolute;
    width: auto;
}

.background-cycler {
    height: 100%;
    left: 0;
    margin: 0;
    padding: 0;
    position:absolute;
    top: 0;
    width: 100%;
    z-index: 1;

    img {
        // Set rules to fill background.
        min-height: 100%;
        min-width: 1024px;
        // Set up proportionate scaling.
        width: 100%;
        height: auto;

        left: 0;
        position: absolute;
        top: 0;
        z-index: 2;

        &.active {
            z-index: 4;
        }
    }
}

header {
    align-content: center;
    align-items: center;
    display: flex;
    height: 75px;
    justify-content: space-between;
    width: 100%;
    z-index: 2;

    .bubble-nav {
        bottom: 30px;
        position: relative;

        .bubble:not(.active):hover {
            cursor: default;
        }
    }
}

.play-nav {
    .next,
    .prev,
    .play {
        display: none;
    }
    a {
        -moz-transition: -moz-transform .2s;
        -webkit-transition: -webkit-transform .2s;
        color: $light-gray;
        display: inline-block;
        font-size: 26px;
        padding: 0 15px;
    }
}

.bubble {
    background-position: center center;
    background-size: auto 50px;
    border-radius: 50%;
    display: inline-block;
    height: 50px;
    overflow: hidden;
    width: 50px;
}

.moment-links {
    height: 50px;
    padding-bottom: 30px;
}

.bubble-nav,
.moment-links {
    display: flex;
}

.bubble-link,
.moment-link {
    margin-right: 15px;
    width: 50px;

    &:nth-child(4n) .front .bubble {
        background: $bubble1;
    }
    &:nth-child(4n + 1) .front .bubble {
        background: $bubble2;
    }
    &:nth-child(4n + 2) .front .bubble {
        background: $bubble3;
    }
    &:nth-child(4n + 3) .front .bubble {
        background: $bubble4;
    }
}

.bubble-link {
    &.current,
    &:hover {
        .back.bubble {
            @include box-shadow(0);
            @include transition(all $adelheid_ms);
        }
        &:nth-child(4n) .back .bubble {
            @include box-shadow(0 0 1px 1px $bubble1);
        }
        &:nth-child(4n + 1) .back .bubble {
            @include box-shadow(0 0 1px 1px $bubble2);
        }
        &:nth-child(4n + 2) .back .bubble {
            @include box-shadow(0 0 1px 1px $bubble3);
        }
        &:nth-child(4n + 3) .back .bubble {
            @include box-shadow(0 0 1px 1px $bubble4);
        }
    }
}

.adelheid {
    @include transform(translateX(0));
    -moz-transition: -moz-transform $adelheid-ms ease-out;
    -webkit-transition: -webkit-transform $adelheid-ms ease-out;
    align-content: flex-start;
    align-items: flex-start;
    display: flex;
    height: unquote('calc(100% - 75px)');
    left: 0;
    position: absolute;
    width: -moz-fit-content;
    width: -webkit-fit-content;
    z-index: 2;
}

.chapter {
    align-content: flex-start;
    align-items: flex-start;
    display: flex-inline;
    flex-flow: row wrap;
    height: 100%;
    position: relative;
    whitespace: nowrap;
}

.chapter-body-container {
    display: flex;
    justify-content: center;
    height: 65%;
    position: relative;
    top: 2.5%;
}

// Flip.
.flip-container {
    perspective: 1000px;
    position: relative;
    z-index: 1;

    .inner-flip {
        -moz-transform-style: preserve-3d;
        -webkit-transform-style: preserve-3d;
        -moz-transition: all 1s linear;
        -webkit-transition: all 1s linear;
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;
        width: 95%;
        height: 100%;
    }
    .front,
    .back {
        height: 100%;
        position: absolute;
        width: 100%;
    }
    .back {
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;
        box-sizing: border-box;
    }

    &.hover-flip.active {
        &:hover,
        .back:hover,
        .bubble:hover {
            cursor: pointer;
        }
    }

    // Rotates.
    &.x-flip {
        &.hover-flip.flippable:hover .inner-flip,
        &.flipped .inner-flip {
            -moz-transform: rotateX(180deg) rotateZ(0deg);
            -webkit-transform: rotateX(180deg) rotateZ(0deg);
        }
        .back {
            -moz-transform: rotateX(180deg) rotateZ(0deg);
            -webkit-transform: rotateX(180deg) rotateZ(0deg);
        }
    }
    &:not(.x-flip) {
        &.hover-flip.flippable:hover .inner-flip,
        &.flipped .inner-flip {
            -moz-transform: rotateY(180deg) rotateZ(0deg);
            -webkit-transform: rotateY(180deg) rotateZ(0deg);
        }
        .back {
            -moz-transform: rotateY(180deg) rotateZ(0deg);
            -webkit-transform: rotateY(180deg) rotateZ(0deg);
        }
    }
}

.inner-flip .chapter-body {
    @include disable_user_select();
    display: flex;
    height: 100%;
    justify-content: center;
    left: 0;
    margin: 0 auto;
    max-width: 100%;
    right: 0;
    width: -moz-fit-content;
    width: -webkit-fit-content;

    .sidebar {
        background: rgba(255, 255, 255, .85);
        overflow-y: scroll;
        padding: 20px;
        max-width: 450px;
    }
    .parallax {
        height: 100%;
        overflow: hidden;
        width: -moz-fit-content;
        width: -webkit-fit-content;

        .key-image {
            -moz-transition: -moz-transform $adelheid-ms;
            -webkit-transition: -webkit-transform $adelheid-ms;
            height: 100%;
        }
    }
    &.back {
        display: none;

        &.active {
            display: flex;
        }
    }
    .moment-back {
        display: block;
        padding-bottom: 24px;
    }
}

.chapter[data-background=""] .front {
    box-shadow: 0 0 0 1px $light-gray;
}

// Parallax.
.chapter.active .key-image {
    -moz-transform: translate3d(0, 0, 0) scale(1.1);
    -webkit-transform: translate3d(0, 0, 0) scale(1.1);
}
.chapter .key-image {
    -moz-transform: translate3d(8%, 0, 0) scale(1.1);
    -webkit-transform: translate3d(8%, 0, 0) scale(1.1);
}

.image-strip {
    @include def-box-shadow();
    background-image: url('/img/textures/strip-bg.png');
    bottom: 0;
    height: unquote('calc(35% - 75px)');
    left: 0;
    overflow: hidden;
    position: absolute;
    // TODO: make this dynamic in JS.
    width: 2000%;  // Images don't load unless drawn somewhere.
    // Keep a 2 : 1.2 : 1-page ratio between width, duration, translateX.

    .image-reel {
        -moz-animation: imagereel 300s linear 0s infinite normal paused;
        -webkit-animation: imagereel 300s linear 0s infinite normal paused;
        height: 100%;

        &.running {
            animation-play-state: running;
            -moz-animation-play-state: running;
            -webkit-animation-play-state: running;
        }
        &.reset {
            display: none;
            -moz-animation: none;
            -webkit-animation: none;
        }
        img {
            border-radius: 0;
            min-height: 100%;
            max-height: 100%;
        }
    }
}

@-webkit-keyframes imagereel {
    from {
        -webkit-transform: translate3d(5%, 0, 0);
    }
    to {
        -webkit-transform: translate3d(-100%, 0, 0);
    }
}
@-moz-keyframes imagereel {
    from {
        -moz-transform: translate3d(5%, 0, 0);
    }
    to {
        -moz-transform: translate3d(-100%, 0, 0);
    }
}

.sidebar.empty {
    display: none;
}
